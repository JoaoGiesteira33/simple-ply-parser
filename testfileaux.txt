%% LEX
%literals = "+-/*=()"           ## a single char
%ignore = " \t\n"
%tokens = [ 'VAR','NUMBER' ]

r'[a-zA-Z_][a-zA-Z0-9_]*' return('VAR', t.value)
r'\d+(\.\d+)?'            return('NUMBER', float(t.value))
.                         error(f"Illegal character '{t.value[0]}', [{t.lexer.lineno}]",t.lexer.skip(1) )

lexer=lex()
%% YACC

%precedence = [
    ('left','+','-'),
    ('left','*','/'),
    ('right','UMINUS'),
]

# symboltable : dictionary of variables
ts = { }

stat : VAR '=' exp          { ts[t[1]] = t[3] }
stat : exp                  { print(t[1]) }
exp : exp '+' exp           { t[0] = t[1] + t[3] }
exp : exp '-' exp           { t[0] = t[1] - t[3] }
exp : exp '*' exp           { t[0] = t[1] * t[3] }
exp : exp '/' exp           { t[0] = t[1] / t[3] }
exp : '-' exp %prec UMINUS  { t[0] = -t[2] }
exp : '(' exp ')'           { t[0] = t[2] }
exp : NUMBER                { t[0] = t[1] }
exp : VAR                   { t[0] = getval(t[1]) }

%%